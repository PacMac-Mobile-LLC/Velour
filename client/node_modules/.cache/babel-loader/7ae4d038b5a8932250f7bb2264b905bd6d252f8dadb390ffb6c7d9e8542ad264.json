{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{loadStripe}from'@stripe/stripe-js';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const StripeContext=/*#__PURE__*/createContext();export const useStripe=()=>{const context=useContext(StripeContext);if(!context){throw new Error('useStripe must be used within a StripeProvider');}return context;};export const StripeProvider=_ref=>{let{children}=_ref;const[stripePromise,setStripePromise]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const initializeStripe=async()=>{try{// In production, you'd get this from your backend\nconst publishableKey=process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY||'pk_test_your_key_here';const stripe=await loadStripe(publishableKey);setStripePromise(stripe);}catch(error){console.error('Failed to initialize Stripe:',error);}finally{setLoading(false);}};initializeStripe();},[]);const createSubscription=async(creatorId,plan,interval)=>{try{setLoading(true);const response=await axios.post('/api/payments/subscribe',{creatorId,plan,interval});return{success:true,data:response.data};}catch(error){var _error$response,_error$response$data;return{success:false,message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to create subscription'};}finally{setLoading(false);}};const cancelSubscription=async function(subscriptionId){let immediately=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;try{setLoading(true);const response=await axios.post(\"/api/payments/cancel-subscription/\".concat(subscriptionId),{immediately});return{success:true,data:response.data};}catch(error){var _error$response2,_error$response2$data;return{success:false,message:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to cancel subscription'};}finally{setLoading(false);}};const createPaymentIntent=async(contentId,amount)=>{try{setLoading(true);const response=await axios.post('/api/payments/pay-per-view',{contentId,amount});return{success:true,data:response.data};}catch(error){var _error$response3,_error$response3$data;return{success:false,message:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to create payment intent'};}finally{setLoading(false);}};const setupCustomer=async()=>{try{setLoading(true);const response=await axios.post('/api/payments/setup-customer');return{success:true,data:response.data};}catch(error){var _error$response4,_error$response4$data;return{success:false,message:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to setup customer'};}finally{setLoading(false);}};const getPaymentMethods=async()=>{try{const response=await axios.get('/api/payments/payment-methods');return{success:true,data:response.data};}catch(error){var _error$response5,_error$response5$data;return{success:false,message:((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to get payment methods'};}};const getSubscriptions=async()=>{try{const response=await axios.get('/api/payments/subscriptions');return{success:true,data:response.data};}catch(error){var _error$response6,_error$response6$data;return{success:false,message:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to get subscriptions'};}};const getAnalytics=async()=>{try{const response=await axios.get('/api/payments/analytics');return{success:true,data:response.data};}catch(error){var _error$response7,_error$response7$data;return{success:false,message:((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to get analytics'};}};const value={stripePromise,loading,createSubscription,cancelSubscription,createPaymentIntent,setupCustomer,getPaymentMethods,getSubscriptions,getAnalytics};return/*#__PURE__*/_jsx(StripeContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loadStripe","axios","jsx","_jsx","StripeContext","useStripe","context","Error","StripeProvider","_ref","children","stripePromise","setStripePromise","loading","setLoading","initializeStripe","publishableKey","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","stripe","error","console","createSubscription","creatorId","plan","interval","response","post","success","data","_error$response","_error$response$data","message","cancelSubscription","subscriptionId","immediately","arguments","length","undefined","concat","_error$response2","_error$response2$data","createPaymentIntent","contentId","amount","_error$response3","_error$response3$data","setupCustomer","_error$response4","_error$response4$data","getPaymentMethods","get","_error$response5","_error$response5$data","getSubscriptions","_error$response6","_error$response6$data","getAnalytics","_error$response7","_error$response7$data","value","Provider"],"sources":["/Users/matty/VideoChat/VideoChat/client/src/contexts/StripeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from 'axios';\n\nconst StripeContext = createContext();\n\nexport const useStripe = () => {\n  const context = useContext(StripeContext);\n  if (!context) {\n    throw new Error('useStripe must be used within a StripeProvider');\n  }\n  return context;\n};\n\nexport const StripeProvider = ({ children }) => {\n  const [stripePromise, setStripePromise] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeStripe = async () => {\n      try {\n        // In production, you'd get this from your backend\n        const publishableKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY || 'pk_test_your_key_here';\n        const stripe = await loadStripe(publishableKey);\n        setStripePromise(stripe);\n      } catch (error) {\n        console.error('Failed to initialize Stripe:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeStripe();\n  }, []);\n\n  const createSubscription = async (creatorId, plan, interval) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/payments/subscribe', {\n        creatorId,\n        plan,\n        interval\n      });\n\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to create subscription'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const cancelSubscription = async (subscriptionId, immediately = false) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`/api/payments/cancel-subscription/${subscriptionId}`, {\n        immediately\n      });\n\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to cancel subscription'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createPaymentIntent = async (contentId, amount) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/payments/pay-per-view', {\n        contentId,\n        amount\n      });\n\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to create payment intent'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setupCustomer = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/payments/setup-customer');\n\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to setup customer'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getPaymentMethods = async () => {\n    try {\n      const response = await axios.get('/api/payments/payment-methods');\n\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get payment methods'\n      };\n    }\n  };\n\n  const getSubscriptions = async () => {\n    try {\n      const response = await axios.get('/api/payments/subscriptions');\n\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get subscriptions'\n      };\n    }\n  };\n\n  const getAnalytics = async () => {\n    try {\n      const response = await axios.get('/api/payments/analytics');\n\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get analytics'\n      };\n    }\n  };\n\n  const value = {\n    stripePromise,\n    loading,\n    createSubscription,\n    cancelSubscription,\n    createPaymentIntent,\n    setupCustomer,\n    getPaymentMethods,\n    getSubscriptions,\n    getAnalytics\n  };\n\n  return (\n    <StripeContext.Provider value={value}>\n      {children}\n    </StripeContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}