{"ast":null,"code":"import _objectSpread from\"/Users/matty/VideoChat/VideoChat/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// PWA utility functions for service worker and notifications\nexport const registerServiceWorker=async()=>{if('serviceWorker'in navigator){try{const registration=await navigator.serviceWorker.register('/sw.js');console.log('Service Worker registered successfully:',registration);return registration;}catch(error){console.log('Service Worker registration failed:',error);return null;}}return null;};export const requestNotificationPermission=async()=>{if(!('Notification'in window)){console.log('This browser does not support notifications');return false;}if(Notification.permission==='granted'){console.log('Notification permission already granted');return true;}if(Notification.permission==='denied'){console.log('Notification permission denied');return false;}try{const permission=await Notification.requestPermission();console.log('Notification permission:',permission);return permission==='granted';}catch(error){console.error('Error requesting notification permission:',error);return false;}};export const showNotification=function(title){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(Notification.permission==='granted'){const notification=new Notification(title,_objectSpread({icon:'/logo192.png',badge:'/logo192.png',vibrate:[100,50,100]},options));notification.onclick=()=>{window.focus();notification.close();};return notification;}return null;};export const isPWA=()=>{return window.matchMedia('(display-mode: standalone)').matches||window.navigator.standalone===true;};export const installPWA=()=>{// This will be handled by the browser's install prompt\n// We can listen for the beforeinstallprompt event\nlet deferredPrompt;window.addEventListener('beforeinstallprompt',e=>{e.preventDefault();deferredPrompt=e;return deferredPrompt;});return deferredPrompt;};export const initializePWA=async()=>{// Register service worker\nawait registerServiceWorker();// Request notification permission\nawait requestNotificationPermission();console.log('PWA initialized successfully');};","map":{"version":3,"names":["registerServiceWorker","navigator","registration","serviceWorker","register","console","log","error","requestNotificationPermission","window","Notification","permission","requestPermission","showNotification","title","options","arguments","length","undefined","notification","_objectSpread","icon","badge","vibrate","onclick","focus","close","isPWA","matchMedia","matches","standalone","installPWA","deferredPrompt","addEventListener","e","preventDefault","initializePWA"],"sources":["/Users/matty/VideoChat/VideoChat/client/src/utils/pwa.js"],"sourcesContent":["// PWA utility functions for service worker and notifications\n\nexport const registerServiceWorker = async () => {\n  if ('serviceWorker' in navigator) {\n    try {\n      const registration = await navigator.serviceWorker.register('/sw.js');\n      console.log('Service Worker registered successfully:', registration);\n      return registration;\n    } catch (error) {\n      console.log('Service Worker registration failed:', error);\n      return null;\n    }\n  }\n  return null;\n};\n\nexport const requestNotificationPermission = async () => {\n  if (!('Notification' in window)) {\n    console.log('This browser does not support notifications');\n    return false;\n  }\n\n  if (Notification.permission === 'granted') {\n    console.log('Notification permission already granted');\n    return true;\n  }\n\n  if (Notification.permission === 'denied') {\n    console.log('Notification permission denied');\n    return false;\n  }\n\n  try {\n    const permission = await Notification.requestPermission();\n    console.log('Notification permission:', permission);\n    return permission === 'granted';\n  } catch (error) {\n    console.error('Error requesting notification permission:', error);\n    return false;\n  }\n};\n\nexport const showNotification = (title, options = {}) => {\n  if (Notification.permission === 'granted') {\n    const notification = new Notification(title, {\n      icon: '/logo192.png',\n      badge: '/logo192.png',\n      vibrate: [100, 50, 100],\n      ...options\n    });\n\n    notification.onclick = () => {\n      window.focus();\n      notification.close();\n    };\n\n    return notification;\n  }\n  return null;\n};\n\nexport const isPWA = () => {\n  return window.matchMedia('(display-mode: standalone)').matches ||\n         window.navigator.standalone === true;\n};\n\nexport const installPWA = () => {\n  // This will be handled by the browser's install prompt\n  // We can listen for the beforeinstallprompt event\n  let deferredPrompt;\n  \n  window.addEventListener('beforeinstallprompt', (e) => {\n    e.preventDefault();\n    deferredPrompt = e;\n    return deferredPrompt;\n  });\n\n  return deferredPrompt;\n};\n\nexport const initializePWA = async () => {\n  // Register service worker\n  await registerServiceWorker();\n  \n  // Request notification permission\n  await requestNotificationPermission();\n  \n  console.log('PWA initialized successfully');\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}